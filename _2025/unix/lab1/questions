

1. Опишите процесс загрузки операционной системы.

Основные этапы загрузки:

    1) Системная прошивка компьютера выполняет первичную проверку и инициализацию аппаратного обеспечения.

    2) В случае BIOS прошивка загружает в оперативную память и выполняет загрузочный код с одного из разделов заданного загрузочного устройства,
    который содержит фазу 1 загрузчика Linux.
    Фаза 1 загружает фазу 2 (значительный по размеру код загрузчика).
    Некоторые загрузчики могут использовать для этого промежуточный этап (под названием фаза 1,5),
    поскольку современные диски большого объёма могут некорректно считываться без дальнейшего кода.

    В случае UEFI запускается загрузчик загруженный со служебного раздела (EFS),
    который выбирается согласно настройкам приоритета загрузки определенного в энергонезависимой памяти компьютера.
    При этом возможна загрузка не только специализированного загрузчика, но можно загрузить и непосредственно ядро Linux
    (для этого ядро должно быть собрано с опцией EFI_STUB).

    3) Загрузчик зачастую предлагает пользователю меню с доступными вариантами загрузки.
    После выбора или после заданного тайм-аута загрузчик загружает ядро.

    4) Загруженное ядро распаковывается в памяти, настраивает системные функции, такие как работа необходимого оборудования и управление страницами памяти, после чего делает вызов start_kernel().

    5) После этого start_kernel() выполняет основную настройку системы (прерывания, остальные функции управления памятью, инициализацию устройств, драйверов и т. д.), а потом порождает процесс бездействия, диспетчер и отдельно от них — процесс init (выполняющийся в пользовательском пространстве).

    6) Планировщик начинает более эффективно управлять системой, в то время как ядро переходит к бездействию.

    7) Процесс init выполняет необходимые сценарии, которые настраивают все службы и структуры, не относящиеся к уровню ядра, в результате чего будет создано пользовательское окружение, и пользователю будет предоставлен экран входа в систему.



2. Что такое уровни инициализации, и зачем они нужны?

Уровень выполнения (уровень инициализации, уровень запуска) — нумерованный режим функционирования операционной системы, подразумевающий наличие в нём тех или иных функций: чем выше номер уровня, тем больше функций. Впервые реализована в подсистеме инициализации init в стиле System V, но также используется и в других подсистемах инициализации. Выбор числа уровней и их содержание отличается от системы к системе.

Всякая операционная система в определённый момент времени находится только на одном из уровней выполнения. Администратор системы может переводить её с одного уровня выполнения на другой, например, в при помощи программы init (например, init 3). В большинстве систем проверить текущий уровень можно командой runlevel. 

Традиционно существуют шесть уровней выполнения, пронумерованные от 0 до 6 (уровень 4 не используется), однако встречаются десять уровней — от 0 до 9, а в литературе упоминается уровень S, который является синонимом для первого уровня. Свойства традиционных уровней:

    0 — остановка системы.
    1 — однопользовательский режим, предназначен для различных административных действий по восстановлению системы; по своему смыслу аналогичен безопасному режиму в Windows, но полностью его не повторяет; на этом уровне выполнения система полностью сконфигурирована, но не запущен ни один сервис, а из пользователей может работать только один root;
    2 — многопользовательский режим без поддержки сети (иногда используется как эквивалент уровня 3);
    3 — многопользовательский режим с поддержкой сети, нормальный режим работы сервера;
    5 — загрузка в многопользовательском режиме с графическим входом в систему;
    6 — перезагрузка системы.


3. В чем заключается процедура авторизации пользователя? Цель авторизации? Какие
действия совершает система после того, как пользователь ввел пароль, и до того, как
пользователь получает возможность передавать системе какие-то команды?


4. Опишите две реальные ситуации, когда вам может понадобиться получить дату и
время в консоли UNIX.


5. Что такое среда пользователя? Опишите, как добавить новую переменную в среду, как
изменить значение существующей переменной для одного пользователя и всех
пользователей в системе.


6. Опишите одну реальную ситуацию, когда вам может понадобиться изменить
переменную среды при запуске приложения.


7. Для чего используются группы пользователей?


8. Зачем нужны идентификаторы пользователей?


9. Объясните содержание и назначение каждого поля регистрационной записи.


10. В чем отличие в диалоге прямыми сообщениями и почтовыми?


